===========================================================================
- AOP (Aspect Oriented Programming) - 관점 지향 프로그래밍
  -> OOP를 더 잘 구현할 수 있도록 도와주는 보조 프로그램
  -> 사용 : 원래 업무들에서 공통된 엄무들을 찾고 그 업무들은 AOP로 만들어 놓고
               필요로 한 순간에 사이사이 끼워 넣기

 - before	: 메소드 실행 전 실행
 - after -returning	: 메소드 실행 후 실행
 - after-throwing : 메소드 실행 중 예외발생 실행
 - after : 메소드 실행 후 실행(예외 발생 여부 상관 없음)
 - around : 메소드 실행 전/후, 예외발생 시 실행

> AOP 종류
 1. AspectJ	1) 코드 적용
		2) Compile시 적용

 2. spring		3) Runtime시 적용
 
> AOP 용어
 - Target : 실직적인 비지니스 로직을 구현하는 코드
 - JointPoint : 메소드 호출하는 시점
 - PointCut : 여러 개의 JointPoint를 하나로 결합한 것
 			: Target 클래스에 advice가 결합된 때 둘 사이의 결합 규칙을 정의한 것
  + expression
  
 - Advice : JointPoint에서 실행되어야 하는 코드
 		ex) (횡단관심사) 트랜잭션, 로그, 보안, 인증
 		
 - weaving : advice를 핵심 코드에 삽입하는 것